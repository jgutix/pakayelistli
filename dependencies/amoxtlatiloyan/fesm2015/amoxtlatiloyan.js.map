{"version":3,"file":"amoxtlatiloyan.js","sources":["ng://amoxtlatiloyan/lib/cities.ts","ng://amoxtlatiloyan/lib/diacritic-regex.ts","ng://amoxtlatiloyan/lib/cities-helper.ts","ng://amoxtlatiloyan/lib/search-form.component.ts","ng://amoxtlatiloyan/lib/search-input/search-input.component.ts","ng://amoxtlatiloyan/lib/AuthInterceptor.ts","ng://amoxtlatiloyan/lib/amoxtlatiloyan.module.ts","ng://amoxtlatiloyan/lib/address.service.ts","ng://amoxtlatiloyan/lib/address.ts","ng://amoxtlatiloyan/lib/reference.ts","ng://amoxtlatiloyan/public-api.ts","ng://amoxtlatiloyan/amoxtlatiloyan.ts"],"sourcesContent":["/**\n * Created by jgutix on 29/5/17.\n */\nexport const cities = [\n  ['Caribe Norte', 'Bilwi', 'Bilwi (sede del gobierno regional autónomo)'],\n  ['Caribe Norte', 'Bonanza', 'Bonanza'],\n  ['Caribe Norte', 'Mulukukú', 'Mulukukú'],\n  ['Caribe Norte', 'Prinzapolka', 'Prinzapolka'],\n  ['Caribe Norte', 'Rosita', 'Rosita'],\n  ['Caribe Norte', 'Siuna', 'Siuna'],\n  ['Caribe Norte', 'Waslala', 'Waslala'],\n  ['Caribe Norte', 'Waspán', 'Waspán'],\n  ['Caribe Sur', 'Bluefields', 'Bluefields (sede del gobierno regional autónomo)'],\n  ['Caribe Sur', 'Corn Island', 'Corn Island'],\n  ['Caribe Sur', 'Desembocadura de Río Grande', 'Karawala'],\n  ['Caribe Sur', 'El Ayote', 'El Ayote'],\n  ['Caribe Sur', 'El Tortuguero', 'El Tortuguero'],\n  ['Caribe Sur', 'Kukra Hill', 'Kukra Hill'],\n  ['Caribe Sur', 'La Cruz de Río Grande', 'La Cruz de Río Grande'],\n  ['Caribe Sur', 'Laguna de Perlas', 'Laguna de Perlas'],\n  ['Caribe Sur', 'Muelle de los Bueyes', 'Muelle de los Bueyes'],\n  ['Caribe Sur', 'Nueva Guinea', 'Nueva Guinea'],\n  ['Caribe Sur', 'Paiwas', 'Paiwas'],\n  ['Caribe Sur', 'El Rama', 'El Rama'],\n  ['Boaco', 'Boaco', 'Boaco (cabecera departamental)'],\n  ['Boaco', 'Camoapa', 'Camoapa'],\n  ['Boaco', 'San Lorenzo', 'San Lorenzo'],\n  ['Boaco', 'San José de Los Remates', 'Los Remates'],\n  ['Boaco', 'Santa Lucía', 'Santa Lucía'],\n  ['Boaco', 'Teustepe', 'Teustepe'],\n  ['Carazo', 'Diriamba', 'Diriamba'],\n  ['Carazo', 'Dolores', 'Dolores'],\n  ['Carazo', 'El Rosario', 'El Rosario'],\n  ['Carazo', 'Jinotepe', 'Jinotepe (cabecera departamental)'],\n  ['Carazo', 'La Conquista', 'La Conquista'],\n  ['Carazo', 'La Paz de Oriente', 'La Paz de Oriente'],\n  ['Carazo', 'San Marcos', 'San Marcos'],\n  ['Carazo', 'Santa Teresa', 'Santa Teresa'],\n  ['Chinandega', 'Chichigalpa', 'Chichigalpa'],\n  ['Chinandega', 'Chinandega', 'Chinandega (cabecera departamental)'],\n  ['Chinandega', 'Cinco Pinos', 'Cinco Pinos'],\n  ['Chinandega', 'Corinto', 'Corinto'],\n  ['Chinandega', 'El Realejo', 'El Realejo'],\n  ['Chinandega', 'El Viejo', 'El Viejo'],\n  ['Chinandega', 'Posoltega', 'Posoltega'],\n  ['Chinandega', 'San Francisco del Norte', 'San Francisco del Norte'],\n  ['Chinandega', 'San Pedro del Norte', 'San Pedro del Norte'],\n  ['Chinandega', 'Santo Tomás del Norte', 'Santo Tomás del Norte'],\n  ['Chinandega', 'Somotillo', 'Somotillo'],\n  ['Chinandega', 'Puerto Morazán', 'Puerto Morazán'],\n  ['Chinandega', 'Villanueva', 'Villanueva'],\n  ['Chontales', 'Acoyapa', 'Acoyapa'],\n  ['Chontales', 'Comalapa', 'Comalapa'],\n  ['Chontales', 'San Francisco de Cuapa', 'Cuapa'],\n  ['Chontales', 'El Coral', 'El Coral'],\n  ['Chontales', 'Juigalpa', 'Juigalpa (cabecera departamental)'],\n  ['Chontales', 'La Libertad', 'La Libertad'],\n  ['Chontales', 'San Pedro de Lóvago', 'San Pedro de Lóvago'],\n  ['Chontales', 'Santo Domingo', 'Santo Domingo'],\n  ['Chontales', 'Santo Tomás', 'Santo Tomás'],\n  ['Chontales', 'Villa Sandino', 'Villa Sandino'],\n  ['Estelí', 'Condega', 'Condega'],\n  ['Estelí', 'Estelí', 'Estelí (cabecera departamental)'],\n  ['Estelí', 'La Trinidad', 'La Trinidad'],\n  ['Estelí', 'Pueblo Nuevo', 'Pueblo Nuevo'],\n  ['Estelí', 'San Juan de Limay', 'San Juan de Limay'],\n  ['Estelí', 'San Nicolás', 'San Nicolás'],\n  ['Granada', 'Diriá', 'Diriá'],\n  ['Granada', 'Diriomo', 'Diriomo'],\n  ['Granada', 'Granada', 'Granada (cabecera departamental)'],\n  ['Granada', 'Nandaime', 'Nandaime'],\n  ['Jinotega', 'El Cuá', 'El Cuá'],\n  ['Jinotega', 'Jinotega', 'Jinotega (cabecera departamental)'],\n  ['Jinotega', 'La Concordia', 'La Concordia'],\n  ['Jinotega', 'San José de Bocay', 'Bocay'],\n  ['Jinotega', 'San Rafael del Norte', 'San Rafael del Norte'],\n  ['Jinotega', 'San Sebastián de Yalí', 'Yalí'],\n  ['Jinotega', 'Santa María de Pantasma', 'Las Praderas'],\n  ['Jinotega', 'Wiwilí de Jinotega', 'Wiwilí'],\n  ['León', 'Achuapa', 'Achuapa'],\n  ['León', 'El Jicaral', 'El Jicaral'],\n  ['León', 'El Sauce', 'El Sauce'],\n  ['León', 'La Paz Centro', 'La Paz Centro'],\n  ['León', 'Larreynaga', 'Malpaisillo'],\n  ['León', 'León', 'León (cabecera departamental)'],\n  ['León', 'Nagarote', 'Nagarote'],\n  ['León', 'Quezalguaque', 'Quezalguaque'],\n  ['León', 'Santa Rosa del Peñón', 'Santa Rosa del Peñón'],\n  ['León', 'Telica', 'Telica'],\n  ['Madriz', 'Las Sabanas', 'Las Sabanas'],\n  ['Madriz', 'Palacagüina', 'Palacagüina'],\n  ['Madriz', 'San José de Cusmapa', 'Cusmapa'],\n  ['Madriz', 'San Juan de Río Coco', 'San Juan de Río Coco'],\n  ['Madriz', 'San Lucas', 'San Lucas'],\n  ['Madriz', 'Somoto', 'Somoto (cabecera departamental)'],\n  ['Madriz', 'Telpaneca', 'Telpaneca'],\n  ['Madriz', 'Totogalpa', 'Totogalpa'],\n  ['Madriz', 'Yalagüina', 'Yalagüina'],\n  ['Managua', 'Ciudad Sandino', 'Ciudad Sandino'],\n  ['Managua', 'El Crucero', 'El Crucero'],\n  ['Managua', 'Managua', 'Managua (cabecera departamental)'],\n  ['Managua', 'Mateare', 'Mateare'],\n  ['Managua', 'San Francisco Libre', 'San Francisco Libre'],\n  ['Managua', 'San Rafael del Sur', 'San Rafael del Sur'],\n  ['Managua', 'Ticuantepe', 'Ticuantepe'],\n  ['Managua', 'Tipitapa', 'Tipitapa'],\n  ['Managua', 'Villa El Carmen', 'Villa El Carmen'],\n  ['Masaya', 'Catarina', 'Catarina'],\n  ['Masaya', 'La Concepción', 'La Concepción (La Concha)'],\n  ['Masaya', 'Masatepe', 'Masatepe'],\n  ['Masaya', 'Masaya', 'Masaya (cabecera departamental)'],\n  ['Masaya', 'Nandasmo', 'Nandasmo'],\n  ['Masaya', 'Nindirí', 'Nindirí'],\n  ['Masaya', 'Niquinohomo', 'Niquinohomo'],\n  ['Masaya', 'San Juan de Oriente', 'San Juan de Oriente'],\n  ['Masaya', 'Tisma', 'Tisma'],\n  ['Matagalpa', 'Ciudad Darío', 'Ciudad Darío'],\n  ['Matagalpa', 'El Tuma - La Dalia', 'La Dalia'],\n  ['Matagalpa', 'Esquipulas', 'Esquipulas'],\n  ['Matagalpa', 'Matagalpa', 'Matagalpa (cabecera departamental)'],\n  ['Matagalpa', 'Matiguás', 'Matiguas'],\n  ['Matagalpa', 'Muy Muy', 'Muy Muy'],\n  ['Matagalpa', 'Rancho Grande', 'Rancho Grande'],\n  ['Matagalpa', 'Río Blanco', 'Río Blanco'],\n  ['Matagalpa', 'San Dionisio', 'San Dionisio'],\n  ['Matagalpa', 'San Isidro', 'San Isidro'],\n  ['Matagalpa', 'San Ramón', 'San Ramón'],\n  ['Matagalpa', 'Sébaco', 'Sébaco'],\n  ['Matagalpa', 'Terrabona', 'Terrabona'],\n  ['Nueva Segovia', 'Ciudad Antigua', 'Ciudad Antigua'],\n  ['Nueva Segovia', 'Dipilto', 'Dipilto'],\n  ['Nueva Segovia', 'El Jícaro', 'El Jícaro'],\n  ['Nueva Segovia', 'Güigüilí', 'Wiwilí'],\n  ['Nueva Segovia', 'Jalapa', 'Jalapa'],\n  ['Nueva Segovia', 'Macuelizo', 'Macuelizo'],\n  ['Nueva Segovia', 'Mozonte', 'Mozonte'],\n  ['Nueva Segovia', 'Murra', 'Murra'],\n  ['Nueva Segovia', 'Ocotal', 'Ocotal (cabecera departamental)'],\n  ['Nueva Segovia', 'Quilalí', 'Quilalí'],\n  ['Nueva Segovia', 'San Fernando', 'San Fernando'],\n  ['Nueva Segovia', 'Santa María', 'Santa María'],\n  ['Río San Juan', 'El Almendro', 'El Almendro'],\n  ['Río San Juan', 'El Castillo', 'Boca de Sábalos'],\n  ['Río San Juan', 'Morrito', 'Morrito'],\n  ['Río San Juan', 'San Carlos', 'San Carlos (cabecera departamental)'],\n  ['Río San Juan', 'San Juan del Norte', 'San Juan del Norte'],\n  ['Río San Juan', 'San Miguelito', 'San Miguelito'],\n  ['Rivas', 'Altagracia', 'Altagracia'],\n  ['Rivas', 'Belén', 'Belén'],\n  ['Rivas', 'Buenos Aires', 'Buenos Aires'],\n  ['Rivas', 'Cárdenas', 'Cárdenas'],\n  ['Rivas', 'Moyogalpa', 'Moyogalpa'],\n  ['Rivas', 'Potosí', 'Potosí'],\n  ['Rivas', 'Rivas', 'Rivas (cabecera departamental)'],\n  ['Rivas', 'San Jorge', 'San Jorge'],\n  ['Rivas', 'San Juan del Sur', 'San Juan del Sur'],\n  ['Rivas', 'Tola', 'Tola'],\n]\n","// Copied from https://github.com/pocesar/js-diacritic-regex with some modifications\ninterface Mappings {\n  [index: string]: string | string[];\n}\n\n/**\n * expect the transliterated value as key, and a string with replacements\n */\nconst MAPPINGS: Mappings = {\n  'a': String.fromCharCode(65, 97, 192, 224, 193, 225, 194, 226, 195, 227, 196, 228, 229, 258, 259),\n  'e': String.fromCharCode(69, 101, 200, 232, 201, 233, 202, 234, 203, 235),\n  'i': String.fromCharCode(73, 105, 204, 236, 205, 237, 206, 238, 207, 239),\n  'o': String.fromCharCode(79, 111, 210, 242, 211, 243, 212, 244, 213, 245, 214, 246),\n  'n': String.fromCharCode(78, 110, 209, 241),\n  'u': String.fromCharCode(85, 117, 217, 249, 218, 250, 219, 251, 220, 252),\n  'c': String.fromCharCode(67, 99, 199, 231),\n  'y': String.fromCharCode(89, 121, 221, 253, 159, 255),\n}\n\ninterface StringOptions {\n  /**\n   * overwrite or pass your own mappings.\n   * existing mappings will be overwritten, else it'll be appended to defaults\n   */\n  mappings?: Mappings;\n}\n\ninterface RegexOptions extends StringOptions {\n  /**\n   * RegExp flags, ium. Defaults to i\n   */\n  flags?: string;\n}\n\nexport class DiacriticRegex {\n  /** Generate a that returns a RegExp, that can be reused with the same options */\n  toRegex(options: RegexOptions = {}): (input: string) => RegExp {\n    const innerMappings = this.mergeMappings(typeof options.mappings === 'object' ? options.mappings : null);\n\n    return (input: string): RegExp => {\n      return new RegExp(this.replacer(input, innerMappings), typeof options.flags === 'string' ? options.flags : 'i');\n    };\n  }\n\n  /** Generate a that returns a string, that can be reused with the same options */\n  toString(options: StringOptions = {}): (input: string) => string {\n    const innerMappings = this.mergeMappings(typeof options.mappings === 'object' ? options.mappings : null);\n\n    return (input: string): string => {\n      return this.replacer(input, innerMappings);\n    };\n  }\n\n  private mergeMappings(innerMappings?: Mappings) {\n    const base: Mappings = {};\n\n    for (const mapping in MAPPINGS) {\n      if (MAPPINGS.hasOwnProperty(mapping)) {\n        base[mapping] = MAPPINGS[mapping];\n      }\n    }\n\n    if (innerMappings) {\n      for (const mapping in innerMappings) {\n        if (innerMappings.hasOwnProperty(mapping)) {\n          base[mapping] = innerMappings[mapping];\n        }\n      }\n    }\n\n    return base;\n  }\n\n  private replacer(input: string, mappings: Mappings): string {\n    return input.split('').map((letter: string) => {\n      for (const mapping in mappings) {\n        if (mapping && mapping !== mappings[mapping] && (mapping === letter || mappings[mapping].indexOf(letter) !== -1)) {\n          letter = Array.isArray(mappings[mapping]) ? ( mappings[mapping] as string[] ).join('') : `[${mappings[mapping]}]`;\n          break;\n        }\n      }\n      return letter;\n    }).join('');\n  }\n}\n","import {FormControl} from '@angular/forms';\nimport {cities} from './cities';\nimport {Observable} from 'rxjs';\nimport {DiacriticRegex} from './diacritic-regex';\nimport {map, startWith} from 'rxjs/operators';\n\nexport class CitiesHelper {\n  cityCtrl: any;\n  private regex: DiacriticRegex;\n  private readonly cities: string[][];\n\n  constructor(cityCtrl: FormControl) {\n    this.cities = cities;\n    this.cities = this.cities.sort((a, b) => {\n      if (a[1] < b[1]) {\n        return -1;\n      }\n\n      if (a[1] > b[1]) {\n        return 1;\n      }\n      return 0;\n    });\n    this.cityCtrl = cityCtrl;\n    this.regex = new DiacriticRegex();\n  }\n\n  static isValidCity(city: string): boolean {\n    return cities.map(item => item[1]).indexOf(city) !== -1;\n  }\n\n  getFilteredCitiesObservable(): Observable<string> {\n    // TODO: crear directiva\n    return this.cityCtrl.valueChanges.pipe(\n      startWith(null),\n      map((name: string) => this.filterCities(name))\n    );\n\n  }\n\n  private filterCities(val: string) {\n    return val ? this.cities.filter(c => this.regex.toRegex({flags: 'gi'})(val).test(c[1]))\n      : this.cities;\n  }\n}\n","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {Reference} from './reference';\nimport {FormControl, NgForm} from '@angular/forms';\nimport {CitiesHelper} from './cities-helper';\nimport {Address} from './address';\n\n@Component({\n  selector: 'lib-search-form',\n  templateUrl: './search-form.component.html',\n  styleUrls: ['./search-form.component.scss'],\n})\nexport class SearchFormComponent implements OnInit {\n  address: Address = // TODO: create interface\n    {city: 'Managua', reference: '', segments: [{name: ''}], type: null};\n  ref: Reference = null;\n  cityCtrl: FormControl;\n  filteredCities: any;\n  @ViewChild('searchForm') searchForm: NgForm;\n  copyAddress: string;\n\n  @Input() submitText = 'Buscar';\n  @Input() autoClear = true;\n  @Output() submitted = new EventEmitter<Address>();\n\n  constructor() {\n    this.cityCtrl = new FormControl();\n    const citiesHelper = new CitiesHelper(this.cityCtrl);\n    this.filteredCities = citiesHelper.getFilteredCitiesObservable();\n  }\n\n  ngOnInit(): void {\n  }\n\n  addSegment(index: number = null): void {\n    if (index === null || index === this.address.segments.length - 1) {\n      (this.address.segments as {name: string}[]).push({name: ''});\n    }\n    return;\n  }\n\n  deleteSegment(): void {\n    this.address.segments.splice(this.address.segments.length - 1, 1);\n  }\n\n  clear(): void {\n    this.address = {city: this.address.city, reference: '', segments: [{name: ''}], type: null};\n    this.ref = null;\n  }\n\n  search() {\n    if (!!this.searchForm && this.searchForm.valid && this.cityCtrl.valid && !this.isSameAddress()) {\n      const address = {...this.address};\n      let localSegments = [...address.segments] as {name: string}[];\n      console.log(localSegments);\n\n      if (localSegments.length > 1) {\n        localSegments = localSegments\n          .filter((el: {name: string}) => !!el && !!el.name);\n      }\n      localSegments = localSegments\n        .map((el: {name: string}) => el.name.trim())\n        .join(',')\n        .split(',')\n        .map(el => ({name: el.trim()}));\n      address.segments = localSegments;\n      address.fullAddress = this.addressToString(address, true);\n      this.submitted.emit(address);\n      this.copyAddress = address.fullAddress;\n      if (this.autoClear) {\n        this.clear();\n      }\n    }\n  }\n\n  isSameAddress(): boolean {\n    return this.addressToString(this.address) === this.copyAddress;\n  }\n\n  addressToString(address: Address, coloquial = false): string {\n    if (coloquial) {\n      const segments = !!address.segments ? (address.segments as {name: string}[]).filter(i => !!i.name.trim().length) : [];\n      return `${address.reference.trim()}${segments.length ? ', ' + segments.map(i => i.name).join(', ') : ''}. ${address.city}`;\n    }\n\n    return `${address.city}${address.reference}${(address.segments as {name: string}[]).map(i => i.name).join('')}`;\n  }\n}\n","import {Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild} from '@angular/core';\nimport {MatFormField} from '@angular/material/form-field';\nimport {MatInput} from '@angular/material/input';\nimport {FormControl} from '@angular/forms';\n\n@Component({\n  selector: 'lib-search-input',\n  templateUrl: './search-input.component.html',\n  styleUrls: ['./search-input.component.scss']\n})\nexport class SearchInputComponent implements OnInit, OnChanges {\n  address: string;\n  @Input() fullAddress: string;\n  @Input() hint: boolean | string = false;\n  @Input() error: string;\n  @Output() submitted: EventEmitter<string> = new EventEmitter<string>();\n  addressField = new FormControl();\n\n  constructor() { }\n\n  ngOnInit(): void {\n    if (this.fullAddress) {\n      this.address = this.fullAddress; // TODO: fix: textarea not resizing when adding initial value\n    }\n  }\n\n  reset() {\n    this.address = '';\n  }\n\n  propagate() {\n    this.addressField.markAsTouched();\n    this.submitted.emit(this.address);\n  }\n\n  preventEnter($event: any) {\n    $event.preventDefault();\n  }\n\n  isString(hint: boolean | string) {\n    return typeof hint === 'string';\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['error'] && this.error) {\n      this.addressField.setErrors({anyError: true});\n    }\n  }\n}\n","import {Inject, Injectable, Injector, Optional} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {TOKEN} from './amoxtlatiloyan.module';\nimport {Observable} from 'rxjs';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  private apiToken: string;\n  constructor(inj: Injector/*, @Optional() @Inject(TOKEN) private readonly apiToken: string = null*/) {\n    this.apiToken = inj.get(TOKEN);\n  }\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    const authReq = req.clone({\n      headers: req.headers.set('Authorization', this.apiToken)\n    });\n\n    return next.handle(authReq);\n  }\n}\n","import {InjectionToken, NgModule} from '@angular/core';\nimport { SearchFormComponent } from './search-form.component';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatIconModule} from '@angular/material/icon';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {CommonModule} from '@angular/common';\nimport {MatInputModule} from '@angular/material/input';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatButtonModule} from '@angular/material/button';\nimport { SearchInputComponent } from './search-input/search-input.component';\nimport {AuthInterceptor} from './AuthInterceptor';\n\nexport const BASE_URL = new InjectionToken<string>('BASE_URL');\nexport const TOKEN = new InjectionToken<string>('TOKEN');\n\n@NgModule({\n  declarations: [SearchFormComponent, SearchInputComponent],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatIconModule,\n    FormsModule,\n    MatInputModule,\n    MatButtonModule\n  ],\n  providers: [\n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true, deps: [TOKEN]}\n  ],\n  exports: [SearchFormComponent, SearchInputComponent]\n})\nexport class AmoxtlatiloyanModule {\n  static forRoot(host: string, apiToken: string) {\n    return {\n      ngModule: AmoxtlatiloyanModule,\n      providers: [\n        {\n          provide: BASE_URL,\n          useValue: host\n        },\n        {\n          provide: TOKEN,\n          useValue: apiToken\n        }\n      ]\n    };\n  }\n}\n","import {Inject, Injectable, Optional} from '@angular/core';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {Address} from './address';\nimport {Observable, throwError} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\nimport {BASE_URL} from './amoxtlatiloyan.module';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddressService {\n  private readonly api: string;\n\n  constructor(private http: HttpClient,\n              @Optional() @Inject(BASE_URL) api: string = null) {\n      this.api = api;\n  }\n\n  static isValid(address: Address) {\n    return (!address.reference && (!address.road && !address.roadKm) && (!address.neighborhood && !address.houseNumber))\n      || (address.road && !address.roadKm && !address.reference)\n      || ((address.houseNumber && !address.neighborhood) || (!address.houseNumber && address.neighborhood));\n  }\n\n  validate(address: string) {\n    return this.http.post(`${this.api}search/validate`,\n      {address},\n    );\n  }\n\n  analyze(address: string) {\n    return this.http.post(`${this.api}search/analyze`,\n      {address},\n    ).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  search(address: Address): Observable<any> {\n    return this.http.post(`${this.api}search`, address)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  detailSearch(address: Address): Observable<any> {\n    return this.http.post(`${this.api}search/detail`, address)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  protected handleError(err: HttpErrorResponse) {\n    // in a real world app, we may send the server to some remote logging infrastructure\n    // instead of just logging it to the console\n    let errorMessage = '';\n    if (err.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      // errorMessage = `An error occurred: ${err.error.message}`;\n      errorMessage = `Error de conexión`;\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      // errorMessage = `Server returned code: ${err.status}, error message is: ${err.message}`;\n      errorMessage = err.status === 404 ? `Dirección no encontrada` : `Error en el servidor.`;\n    }\n    return throwError(errorMessage);\n  }\n\n  isMaybeAnAddress(input: string) {\n    return /(costado|esquina)|(\\d*.*(cuadra)?.*(norte|sur|este|oeste|abajo|arriba|lago))|(\\d.*(C|metro).*(s|n|e|o))/gi.test(input);\n  }\n}\n","export class Address {\n    fullAddress?: string;\n    position?: google.maps.LatLng;\n    city?: string;\n    reference?: string;\n    segments?: {name: string}[] | string[];\n    road?: string;\n    roadKm?: string;\n    neighborhood?: string;\n    houseNumber?: string;\n    type?: string;\n    accuracy?: number;\n}\n","class PosModifier {\n    name: string;\n    pos: google.maps.LatLng | google.maps.LatLngLiteral;\n}\n\nexport class Reference {\n    id: string;\n    name: string;\n    pos: google.maps.LatLng | google.maps.LatLngLiteral;\n    snappedPos: google.maps.LatLng;\n    city: string;\n    addedBy: string;\n    revised: boolean;\n    alias: Array<string>;\n    posModifiers: Array<PosModifier>;\n    accuracy?: number;\n    constructor() {\n        return {id: null, name: null, pos: {lat: null, lng: null}, city: '', alias: [''], posModifiers: []} as Reference;\n    }\n}\n","/*\n * Public API Surface of amoxtlatiloyan\n */\n\nexport * from './lib/address.service';\nexport * from './lib/search-form.component';\nexport * from './lib/search-input/search-input.component';\nexport * from './lib/amoxtlatiloyan.module';\nexport * from './lib/address';\nexport * from './lib/reference';\nexport * from './lib/cities-helper';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {AuthInterceptor as ɵa} from './lib/AuthInterceptor';\nexport {cities as ɵb} from './lib/cities';"],"names":[],"mappings":"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"}